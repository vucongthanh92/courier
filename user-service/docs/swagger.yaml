definitions:
  entities.Category:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/entities.Product'
        type: array
      status:
        type: boolean
      updated_at:
        type: string
    type: object
  entities.Product:
    properties:
      category:
        $ref: '#/definitions/entities.Category'
      categoryID:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      stock:
        type: integer
      supply:
        $ref: '#/definitions/entities.Supply'
      supplyID:
        type: integer
      updatedAt:
        type: string
    type: object
  entities.Supply:
    properties:
      contact:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/entities.Product'
        type: array
      updatedAt:
        type: string
    type: object
  models.CreateCategoryReq:
    properties:
      description:
        type: string
      name:
        type: string
      status:
        type: boolean
    required:
    - name
    type: object
info:
  contact: {}
paths:
  /api/v1/category:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.Category'
            type: array
      summary: get list categories
      tags:
      - Category
    post:
      consumes:
      - application/json
      parameters:
      - description: CreateCategoryReq
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
      summary: create category by name
      tags:
      - Category
    put:
      consumes:
      - application/json
      parameters:
      - description: UpdateCategoryReq
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
      summary: delete category by id
      tags:
      - Category
  /api/v1/category/:id:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entities.Category'
      summary: get list categories
      tags:
      - Category
  /api/v1/products:
    get:
      consumes:
      - application/json
      parameters:
      - description: CreateCategoryReq
        in: body
        name: params
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategoryReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: search products with filter and return pagination
      tags:
      - Supplier
swagger: "2.0"
