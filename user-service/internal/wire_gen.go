// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"github.com/google/wire"
	"github.com/vucongthanh92/courier/user-service/config"
	"github.com/vucongthanh92/courier/user-service/database"
	"github.com/vucongthanh92/courier/user-service/internal/api"
	"github.com/vucongthanh92/courier/user-service/internal/api/cron"
	"github.com/vucongthanh92/courier/user-service/internal/api/grpc"
	"github.com/vucongthanh92/courier/user-service/internal/api/http"
	"github.com/vucongthanh92/courier/user-service/internal/api/http/v1"
	"github.com/vucongthanh92/courier/user-service/internal/application/cronjob"
	"github.com/vucongthanh92/courier/user-service/internal/application/identity"
	"github.com/vucongthanh92/courier/user-service/internal/application/user"
	"github.com/vucongthanh92/courier/user-service/internal/repository/persistent/identity"
	"github.com/vucongthanh92/courier/user-service/internal/repository/persistent/user"
	"github.com/vucongthanh92/courier/user-service/redis"
)

// Injectors from wire.go:

func InitializeContainer(appCfg *config.AppConfig, readDb *database.GormReadDb, writeDb *database.GormWriteDb, redisClient redis.Client) *api.ApiContainer {
	userQueryRepoI := user.InitUserQueryRepository(readDb)
	userCommandRepoI := user.InitUserCmdRepository(writeDb)
	userServiceI := category.InitUserService(userQueryRepoI, userCommandRepoI)
	userHandler := v1.InitUserHandler(userServiceI)
	identityQueryRepoI := identity.InitIdentityQueryRepository(readDb)
	identityCommandRepoI := identity.InitIdentityCmdRepository(writeDb)
	identityServiceI := product.InitIdentityService(identityQueryRepoI, identityCommandRepoI)
	identityHandler := v1.InitIdentityHandler(identityServiceI)
	server := http.NewServer(appCfg, userHandler, identityHandler)
	grpcServer := grpc.NewServer(appCfg)
	cronJobService := cronjob.NewCronJobService()
	cronServer := cron.NewServer(appCfg, cronJobService)
	apiContainer := api.NewApiContainer(server, grpcServer, cronServer)
	return apiContainer
}

// wire.go:

var container = wire.NewSet(api.NewApiContainer)

var apiSet = wire.NewSet(cron.NewServer, grpc.NewServer, http.NewServer)

var handlerSet = wire.NewSet(v1.InitIdentityHandler, v1.InitUserHandler)

var serviceSet = wire.NewSet(cronjob.NewCronJobService, category.InitUserService, product.InitIdentityService)

var repoSet = wire.NewSet(user.InitUserCmdRepository, user.InitUserQueryRepository, identity.InitIdentityCmdRepository, identity.InitIdentityQueryRepository)
